name: Push/PR pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:

env:
  TAG: "v0.0.0"
  REPO_FULL_NAME: ${{ github.event.repository.full_name }}
  ORIGINAL_REPO_NAME: "newrelic/nri-oracledb"
  GO_VERSION: '1.18'
  DOCKER_LOGIN_AVAILABLE: ${{ secrets.OHAI_DOCKER_HUB_ID }}

permissions:
  id-token: write

jobs:
  #static-analysis:
  #  name: Run all static analysis checks
  #  runs-on: ubuntu-20.04
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: newrelic/newrelic-infra-checkers@v1
  #    - name: Semgrep
  #      uses: returntocorp/semgrep-action@v1
  #      with:
  #        auditOn: push
  #    - name: golangci-lint
  #      uses: golangci/golangci-lint-action@v2
  #      continue-on-error: ${{ github.event_name != 'pull_request' }}
  #      with:
  #        only-new-issues: true

  test-nix:
    name: Run unit tests on *Nix
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout project's source code
        uses: actions/checkout@v3
      - name: Login to DockerHub
        if: ${{env.DOCKER_LOGIN_AVAILABLE}}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "arn:aws:iam::801306408012:role/role-assumable-by-github"
          aws-region: us-east-2

      # - name: Unit tests
      #   run: make ci/test

      - name: Provision an Oracle Instance
        uses: newrelic/infrastructure-agent/.github/actions/external_runner@master
        with:
          aws_region: us-east-1
          ecs_cluster_name: github-task-runner
          task_definition_name: github-task--oracledb-e2e-tester
          cloud_watch_logs_group_name: /ecs/github-task-runner
          cloud_watch_logs_stream_name: ecs/provisioner
          aws_vpc_subnet: subnet-07e919557ceb6ebeb
          log_filters: ".*"
          container_make_target: >-
            --verbose
            --repository https://github.com/${{ github.repository }}
            --ref ${{ github.head_ref }}
            --
            provision
              TERRAFORM_WORKSPACE=ghrun-pr-${{ github.event.pull_request.number }}

      - name: Deprovision the Oracle Instance
        uses: newrelic/infrastructure-agent/.github/actions/external_runner@master
        with:
          aws_region: us-east-1
          ecs_cluster_name: github-task-runner
          task_definition_name: github-task--oracledb-e2e-tester
          cloud_watch_logs_group_name: /ecs/github-task-runner
          cloud_watch_logs_stream_name: ecs/provisioner
          aws_vpc_subnet: subnet-07e919557ceb6ebeb
          log_filters: ".*"
          container_make_target: >-
            --verbose
            --repository https://github.com/${{ github.repository }}
            --ref ${{ github.head_ref }}
            --
            deprovision
              TERRAFORM_WORKSPACE=ghrun-pr-${{ github.event.pull_request.number }}

  #test-build:
  #  name: Test binary compilation for all platforms:arch
  #  runs-on: ubuntu-20.04
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Login to DockerHub
  #      if: ${{env.DOCKER_LOGIN_AVAILABLE}}
  #      uses: docker/login-action@v1
  #      with:
  #        username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
  #        password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
  #    - name: Build all platforms:arch
  #      run: make ci/build

